#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : ifaddr
Version  : 0.1.6
Release  : 10
URL      : https://files.pythonhosted.org/packages/9f/54/d92bda685093ebc70e2057abfa83ef1b3fb0ae2b6357262a3e19dfe96bb8/ifaddr-0.1.6.tar.gz
Source0  : https://files.pythonhosted.org/packages/9f/54/d92bda685093ebc70e2057abfa83ef1b3fb0ae2b6357262a3e19dfe96bb8/ifaddr-0.1.6.tar.gz
Summary  : Enumerates all IP addresses on all network adapters of the system.
Group    : Development/Tools
License  : MIT
Requires: ifaddr-python = %{version}-%{release}
Requires: ifaddr-python3 = %{version}-%{release}
Requires: ipaddress
BuildRequires : buildreq-distutils3
BuildRequires : ipaddress

%description
ifaddr - Enumerate IP addresses on the local network adapters
=============================================================

`ifaddr` is a small Python library that allows you to find all the
IP addresses of the computer. It is tested on **Linux**, **OS X**, and
**Windows**. Other BSD derivatives like **OpenBSD**, **FreeBSD**, and
**NetBSD** should work too, but I haven't personally tested those.

This library is open source and released under the MIT License.

You can install it with `pip install ifaddr`. It doesn't need to
compile anything, so there shouldn't be any surprises. Even on Windows.

----------------------
Let's get going!
----------------------

.. code-block:: python

   import ifaddr
   
   adapters = ifaddr.get_adapters()
   
   for adapter in adapters:
       print "IPs of network adapter " + adapter.nice_name
       for ip in adapter.ips:
           print "   %s/%s" % (ip.ip, ip.network_prefix)
   
This will print:

.. code-block:: python

	IPs of network adapter H5321 gw Mobile Broadband Driver
	   IP ('fe80::9:ebdf:30ab:39a3', 0L, 17L)/64
	   IP 169.254.57.163/16
	IPs of network adapter Intel(R) Centrino(R) Advanced-N 6205
	   IP ('fe80::481f:3c9d:c3f6:93f8', 0L, 12L)/64
	   IP 192.168.0.51/24
	IPs of network adapter Intel(R) 82579LM Gigabit Network Connection
	   IP ('fe80::85cd:e07e:4f7a:6aa6', 0L, 11L)/64
	   IP 192.168.0.53/24
	IPs of network adapter Software Loopback Interface 1
	   IP ('::1', 0L, 0L)/128
	   IP 127.0.0.1/8
	   
You get both IPv4 and IPv6 addresses. The later complete with
flowinfo and scope_id.

-------------
Documentation 
-------------

The complete documentation (there isn't much to document) can be found here:
`ifaddr Documentation  <http://pythonhosted.org/ifaddr/>`_.

-----------------------------------
Bug Reports and other contributions
-----------------------------------

This project is hosted here `ifaddr github page <https://github.com/smurn/ifaddr>`_.
 
------------
Alternatives
------------

Alastair Houghton develops `netifaces  <https://pypi.python.org/pypi/netifaces>`_ 
which can do  everything this library can, and more. The only drawback is that it needs
to be compiled, which can make the installation difficult.

%package python
Summary: python components for the ifaddr package.
Group: Default
Requires: ifaddr-python3 = %{version}-%{release}

%description python
python components for the ifaddr package.


%package python3
Summary: python3 components for the ifaddr package.
Group: Default
Requires: python3-core
Provides: pypi(ifaddr)

%description python3
python3 components for the ifaddr package.


%prep
%setup -q -n ifaddr-0.1.6
cd %{_builddir}/ifaddr-0.1.6

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1582937239
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
